// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "bytetrade.io/web3os/app-service/api/sys.bytetrade.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppEnvLister helps list AppEnvs.
// All objects returned here must be treated as read-only.
type AppEnvLister interface {
	// List lists all AppEnvs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AppEnv, err error)
	// AppEnvs returns an object that can list and get AppEnvs.
	AppEnvs(namespace string) AppEnvNamespaceLister
	AppEnvListerExpansion
}

// appEnvLister implements the AppEnvLister interface.
type appEnvLister struct {
	indexer cache.Indexer
}

// NewAppEnvLister returns a new AppEnvLister.
func NewAppEnvLister(indexer cache.Indexer) AppEnvLister {
	return &appEnvLister{indexer: indexer}
}

// List lists all AppEnvs in the indexer.
func (s *appEnvLister) List(selector labels.Selector) (ret []*v1alpha1.AppEnv, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppEnv))
	})
	return ret, err
}

// AppEnvs returns an object that can list and get AppEnvs.
func (s *appEnvLister) AppEnvs(namespace string) AppEnvNamespaceLister {
	return appEnvNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppEnvNamespaceLister helps list and get AppEnvs.
// All objects returned here must be treated as read-only.
type AppEnvNamespaceLister interface {
	// List lists all AppEnvs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AppEnv, err error)
	// Get retrieves the AppEnv from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AppEnv, error)
	AppEnvNamespaceListerExpansion
}

// appEnvNamespaceLister implements the AppEnvNamespaceLister
// interface.
type appEnvNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppEnvs in the indexer for a given namespace.
func (s appEnvNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppEnv, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppEnv))
	})
	return ret, err
}

// Get retrieves the AppEnv from the indexer for a given namespace and name.
func (s appEnvNamespaceLister) Get(name string) (*v1alpha1.AppEnv, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appenv"), name)
	}
	return obj.(*v1alpha1.AppEnv), nil
}
