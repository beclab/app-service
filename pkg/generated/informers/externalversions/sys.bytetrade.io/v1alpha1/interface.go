// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "bytetrade.io/web3os/app-service/pkg/generated/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// AppEnvs returns a AppEnvInformer.
	AppEnvs() AppEnvInformer
	// SystemEnvs returns a SystemEnvInformer.
	SystemEnvs() SystemEnvInformer
	// Terminuses returns a TerminusInformer.
	Terminuses() TerminusInformer
	// UserEnvs returns a UserEnvInformer.
	UserEnvs() UserEnvInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// AppEnvs returns a AppEnvInformer.
func (v *version) AppEnvs() AppEnvInformer {
	return &appEnvInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SystemEnvs returns a SystemEnvInformer.
func (v *version) SystemEnvs() SystemEnvInformer {
	return &systemEnvInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Terminuses returns a TerminusInformer.
func (v *version) Terminuses() TerminusInformer {
	return &terminusInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// UserEnvs returns a UserEnvInformer.
func (v *version) UserEnvs() UserEnvInformer {
	return &userEnvInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
